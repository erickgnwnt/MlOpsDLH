training:
  epochs: 10
  batch_size: 32
  learning_rate: 0.01  # Useful for neural networks if needed

model:
  name: logistic_regression  # Options: logistic_regression, random_forest, knn

logistic_regression:
  C_values: [0.01, 0.1, 1.0, 10]  # Supports multiple values for hyperparameter tuning
  solver_options: ["lbfgs", "saga", "newton-cg"]  # Allows multiple solvers for search
  max_iter: 5000
  penalty: ["l2"]  # Regularization options

random_forest:
  n_estimators: 10
  max_depth: 3  # Restrict tree depth to prevent memorization
  min_samples_split: 5  # Requires more samples before splitting
  min_samples_leaf: 2  # Ensures leaf nodes have enough samples

knn:
  n_neighbors: [3, 5, 7]  # Supports different neighbor settings
  weights: "uniform" # Allows multiple weighting methods
  algorithm: ["auto", "ball_tree", "kd_tree", "brute"]  # Flexibility in search strategy

data:
  path: "data.csv"
  normalize: true  # Ensures data preprocessing consistency
